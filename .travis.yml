language: c

jobs:
  include:
    - env: POSTGRESQL_VERSION="9.6" POSTGIS_VERSION="2.5"
      dist: xenial
    - env: POSTGRESQL_VERSION="10" POSTGIS_VERSION="2.5"
      dist: xenial
    - env: POSTGRESQL_VERSION="11" POSTGIS_VERSION="2.5"
      dist: xenial
    - env: POSTGRESQL_VERSION="12" POSTGIS_VERSION="2.5"
      dist: bionic
    - env: POSTGRESQL_VERSION="12" POSTGIS_VERSION="3"
      dist: bionic

script:
  - sudo service postgresql stop
  - sudo apt-get remove postgresql* -y
  - sudo apt-get install -q postgresql-server-dev-$POSTGRESQL_VERSION postgresql-client-$POSTGRESQL_VERSION postgresql-$POSTGRESQL_VERSION-postgis-$POSTGIS_VERSION libcunit1-dev valgrind g++
  - sudo pg_dropcluster --stop $POSTGRESQL_VERSION main
  - sudo rm -rf /etc/postgresql/$POSTGRESQL_VERSION /var/lib/postgresql/$POSTGRESQL_VERSION
  - sudo pg_createcluster -u postgres $POSTGRESQL_VERSION main -- --auth-local trust --auth-host password
  - sudo /etc/init.d/postgresql start $POSTGRESQL_VERSION || sudo journalctl -xe
  - psql -c 'CREATE ROLE travis SUPERUSER LOGIN CREATEDB;' -U postgres
  - nvm install 8
  - npm install -g eclint@1.1.5
  - eclint check * */* */cunit/*
  - sh .install-lazperf.sh
  - ./tools/build-install.sh # test compilation without lazperf
  - ./tools/build-install.sh --with-lazperf=/usr/local && make check && ./tools/valgrind.sh
  - make installcheck || { cat pgsql/regression.diffs && false; }
  - (cd tools/benchmark_compression && sh compression_benchmark.sh)

after_failure:
  - cat pgsql/regression.out
  - cat pgsql/regression.diffs
